name: Docker Build and Publish

on:
  push:
    branches: [ main, dev, on-demand/scalable ]
    tags:
      - 'v*'        # e.g. v1.2.3 will produce a semver tag
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR with GH_TOKEN
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
              ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
            # ghcr.io/${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Inspect pushed image
        run: |
          set -euo pipefail
          first_tag=$(printf "%s\n" "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' | sed '/^$/d' | head -n1)
          echo "Inspecting: $first_tag"
          if [ -z "$first_tag" ]; then
          echo "No tag resolved from metadata-action"
          exit 1
          fi
          docker buildx imagetools inspect "$first_tag"

      - name: Show pushed tags
        run: |
          echo "Pushed image tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'

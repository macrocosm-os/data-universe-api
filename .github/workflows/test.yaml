name: Test

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Docker info
        run: |
          docker --version
          docker compose version

      - name: Build & start compose stack (detached)
        run: |
          docker compose --env-file .test.env -f docker-compose.dev.yml up -d --build

      - name: Wait for services to be healthy (up to ~2 min)
        run: |
          set -e
          for i in {1..24}; do
            unhealthy=$(docker compose -f docker-compose.dev.yml ps --format '{{.Name}} {{.Health}}' | awk '$2=="unhealthy" || $2=="starting" {print $1}')
            if [ -z "$unhealthy" ]; then
              echo "All services healthy."
              break
            fi
            echo "Waiting on: $unhealthy"
            sleep 5
          done
          docker compose -f docker-compose.dev.yml ps

      - name: Perform migrations
        run: |
          export POSTGRES_DSN=postgresql+asyncpg://user:pass@localhost:5432/mydb
          alembic upgrade head

      - name: Run pytest
        run: |
          pytest tests/ -s

      - name: Dump docker compose logs
        if: always()
        run: |
          echo "==== DOCKER LOGS BEGIN ===="
          docker compose -f docker-compose.dev.yml logs --no-color --timestamps
          echo "==== DOCKER LOGS END ===="

      - name: Tear down compose stack
        if: always()
        run: |
          docker compose --env-file .test.env -f docker-compose.dev.yml down --volumes --remove-orphans
